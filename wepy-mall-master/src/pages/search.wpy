<template>
  <view class="container search_vh">
    <view>
      <scroll-view class="category_scroll"  scroll-x scroll-with-animation="true">
        <!--<navigator class="category_list {{item.shows?'select':''}}"  wx:for="{{categoryList}}"  wx:key="item"  url="/pages/search?cateCode={{item.code}}&title={{item.name}}">-->
          <!--<view    data-code="{{item.code}}">{{item.name}}</view>-->
        <!--</navigator>-->

        <view class="category_list" wx:for="{{categoryList}}" wx:key="item" >
          <view  class="category_item {{index==idx?'select':''}}" data-index="{{index}}"  data-code="{{item.code}}" @tap="selTag" data-catecode="{{item.code}}" data-title="{{item.name}}">{{item.name}}</view>
        </view>

      </scroll-view>
    </view>

    <search @searchValue.user="doSearch"></search>
    <filterBar wx:if="{{list.length>0||skuval !==''}}" @currentType.user="currentType"></filterBar>
    <view wx:if="{{list.length>0}}">
      <!--矩阵商品列表模块-->
      <scroll-view scroll-y="true" class="swiper-item-box" style="height:{{winHeight - 100}}px" bindscrolltolower="onReachBottom">
        <shopGridList :purchasetype.sync="purchasetype" :list.sync="list"></shopGridList>
      </scroll-view>
      <!--加载更多时动画-->
      <bottomLoadMore :show.sync="showLoading" message="正在加载"></bottomLoadMore>
    </view>
    <view wx:else>
      <!--暂无数据显示-->
      <placeholder :show.sync="is_empty" message="暂无发现数据"></placeholder>
    </view>

    <!--<view class="history {{show?'':'hidden'}}" wx:else>-->
      <!--<view class="doc">历史记录</view>-->
      <!--<view class="lable">-->
        <!--<view wx:for="{{keywordhisList}}" wx:key="item" @tap.stop="selHisKeyWord" data-id="{{item.id}}">-->
          <!--<view class="child {{item.sel=='1' ?'active':''}}">{{item.keyword}}</view>-->
        <!--</view>-->
      <!--</view>-->
    <!--</view>-->
  </view>
</template>

<script>
  import wepy from 'wepy';
  import api from '@/api/api';
  import tip from '@/utils/tip'
  import {
    SYSTEM_INFO,
    USER_SPECICAL_INFO
  } from '@/utils/constant';
  import Searchs from '@/components/search'
  import FilterBar from "../components/filter_bar"
  import ShopGridList from '@/components/shop_grid_list'
  import BottomLoadMore from "../components/common/bottomLoadMore"
  import Placeholder from "../components/common/placeholder"
  import FilterSlider from '@/components/filterSlider'
  export default class Search extends wepy.page {
    config = {
      navigationBarTitleText: '搜索',
    };
    components = {
      search: Searchs,
      filterBar: FilterBar,
      filterSlider: FilterSlider,
      shopGridList: ShopGridList,
      bottomLoadMore: BottomLoadMore,
      placeholder: Placeholder,
    };
    data = {
      list: [],
      showLoading: false,
      purchasetype: 1,
      is_empty: false,
      is_filter:false,
      //当前页面
      currentPage: 1,
      //总页数
      page_total: 0,
      keyword: "",
      keywordhisList: [],
      cateCode: "",
      show: true,
      sort: "",
      title: "",
      skuval: "",
      categoryList:[],
      idx:"",
      winHeight: 0,
      preventRepeatReuqest:true
    };
    async getKeyWordHisList() {
      let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
      let openId = userSpecialInfo.openid;
      const json = await api.searchKeywordList({
        query: {
          openId: openId
        }
      });
      if (json.data.code == 0) {
        this.keywordhisList = json.data.list;
      }
      this.$apply();
    }
    setTitle(title) {
      wepy.setNavigationBarTitle({
        title: title
      })
    }
    onLoad(option) {
      let systemInfo = wepy.getStorageSync(SYSTEM_INFO);
      this.list = [];
      this.skuval = "";
      this.cateCode = option.cateCode;
      this.winHeight = systemInfo.windowHeight;
      if (this.cateCode != undefined && this.cateCode.length > 0) { //分类进入
        this.$invoke('search', 'show', "0");
        this.show = false;
        this.doSearchGoods();
        this.title = "" + option.title;
        this.idx=option.idx;
        this.setTitle("" + option.title);
        for(let i in this.categoryList){
          if(this.categoryList[i].shows){
            this.idx = i;
          }
        }
      } else { //搜索进入
        this.$invoke('search', 'show', "1");
        this.show = true;
        this.getKeyWordHisList();
      }
    }
    computed = {};
    async doSearchGoods(currentPage) {
      let that = this;
      const json = await api.getGoodsList({
        query: {
          page: currentPage || 1,
          size:10,
          searchKeyWords: this.keyword,
          cateCode: this.cateCode || "",
          sort: this.sort
        }
      });
      if (json.data.code == 0) {
        that.list = [ ...this.list,...json.data.list];
        that.categoryList = json.data.category;
        that.page_total = json.data.page_total;
        that.currentPage = json.data.pageNum;
        console.log('json.data.pageNum;',json.data.pageNum);
        if (json.data.page_total == 0) {
          //暂无数据
          that.is_empty = true;
        }
      } else {
        tip.error(json.data.msg);
      }
      that.showLoading = false;
      that.$apply();
    }
    methods = {
      changeCategory(e){
      },
      selTag(e){
        this.cateCode = e.currentTarget.dataset.catecode;
        this.title=e.currentTarget.dataset.title;
        this.idx=e.currentTarget.dataset.index;
        this.setTitle( this.title);
        this.doSearchGoods();
      },
      doSearch(val) {
        this.list = [];
        this.is_empty = false;
        //tip.success("搜索：" + val);
        this.showLoading = true;
        this.keyword = val;
        this.doSearchGoods();
        //this.list = bb.result.products;
        //this.$apply();
      },
      currentType(obj) {
        //tip.success("状态:" + obj);
        var name = obj.name;
        var type = obj.type;
        if (name == "composite") {
          this.sort = 'sort_desc';
        } else if (name == "sale") {
          if (type == "desc") {
            this.sort = "num_orders_desc";
          } else if (type == "asc") {
            this.sort = "num_orders_asc";
          }

        } else if (name == "price") {
          if (type == "desc") {
            this.sort = "price_max_desc";
          } else if (type == "asc") {
            this.sort = "price_max_asc";
          }
        }
        this.list = [];
        this.is_empty = false;
        this.showLoading = true;
        //this.$invoke('search', 'show', "0");
        this.show = false;
        this.doSearchGoods();
      },
      selHisKeyWord(e) {
        var id = e.currentTarget.dataset.id;
        var hisKeyword = "";
        for (var i = 0; i < this.keywordhisList.length; i++) {
          this.keywordhisList[i].sel = 0;
          if (id == this.keywordhisList[i].id) {
            hisKeyword = this.keywordhisList[i].keyword;
            this.keywordhisList[i].sel = 1;
          }
        }
        if (hisKeyword.length > 0) {
          this.keyword = hisKeyword;
          this.doSearchGoods();
        }
      },
      onShareAppMessage: function(res) {
        if (res.from === 'button') {
          // 来自页面内转发按钮
        }
        return {
          title: this.detail.name,
          path: '/pages/search?cateCode=' + this.cateCode + '&title=' + this.title,
          success: function(res) {
            // 转发成功
          },
          fail: function(res) {
            // 转发失败
          }
        }
      }
    }
    //加载更多
    onReachBottom() {
      let that = this;
      that.showLoading = true;
      //判断总页数是否大于翻页数
      if ((that.page_total) > that.currentPage) {
        console.log('that.page_total',this.page_total);
        that.currentPage++;
        that.doSearchGoods(that.currentPage);

      } else {
        that.showLoading = false;
      }
    };
  }
</script>

<style lang="less">
  .search_vh{
    height:100vh;
  }
  .category_scroll{
     display:block;
    white-space: nowrap;
    border-bottom:15rpx solid #f5f5f5;
    .category_list{
      display:inline-block;
      height:58rpx;
      margin:0 30rpx;
      font-size:35rpx;
      .category_item{
        height:56rpx;
      }
    }
    .select{
      color: #00b4ff;
      border-bottom:6rpx solid #00b4ff;
    }
  }

  .history {
    padding: 20px 27px;
  }
  .doc {
    color: #999;
    font-size: 26rpx;
  }
  .lable {
    margin-top: 20rpx;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    margin-left: -20rpx;
    .child {
      background: #dedede;
      padding: 10rpx 20rpx;
      border-radius: 300rpx;
      margin-left: 20rpx;
      font-size: 26rpx;
      margin-top: 5rpx;
      color: #000;
    }
  }
  .btn_box {
    width: 377rpx;
    margin: 0 auto;
    padding-top: 88rpx;
    .button {
      color: #999;
    }
  }
  .active {
    border: 1px solid #f23737;
    color: #f23737;
  }
</style>
