<!--订单列表模块-->
<template>
<view class="order_item">
<repeat for="{{orderList}}">
  <view class="list" wx:key="index">
    <navigator class="item_content" url="/pages/order_detail?orderNo={{item.id}}">
      <view class="order_list_top">
        <view class="left">
          <view class="title">订单号：
            <text class="order_doc">{{item.ord_code}}</text>
          </view>
        </view>

        <view class="order_state" wx:if="{{item.auditStatus==5}}">
          审批中
        </view>
        <view class="order_state" wx:elif="{{item.auditStatus==-1}}"> 审批不通过 </view>
        <view wx:else>
          <text class="defult" wx:if="{{otag_name=='待支付'}}">
            <view class="order_state">待支付</view>
          </text>
          <view class="order_state" >{{item.otag_name}}</view>
        </view>
    </view>

    <view class="order_list_center">
      <shopItemList :list.sync="item.order_items"></shopItemList>
    </view>
  </navigator>
  <view class="order_list_footer">
    <view class="reveiveMoney c333">应付款：
      <text class="num">{{item.pay_price}}</text>
    </view>

    <view class="order_state" wx:if="{{item.auditStatus==5}}">
    </view>
    <view wx:elif="{{item.auditStatus==-1}}">
      <view class="btn_group">
        <view class="btn btn_del" @tap="cancelOrder" data-id="{{item.id}}">删除订单</view>
      </view>
    </view>
    <view wx:else>
      <view class="btn_group">
        <view class="btn btn_del" @tap="cancelOrder" data-id="{{item.id}}" wx:if="{{item.otag_name=='订单未付款'}}">取消订单</view>
        <view class="btn btn_pay" @tap="payMoney" data-id="{{item.id}}"  wx:if="{{item.otag_name=='订单未付款'}}">立即付款</view>
        <view class="btn btn_pay" @tap="completion" data-id="{{item.id}}" wx:if="{{item.otag_name=='订单已取消'}}">已取消</view>
        <view class="btn btn_pay" @tap="afterSale" data-id="{{item.id}}" wx:if="{{item.otag_name=='订单已付款'&&item.case_fal==false}}">申请售后</view>
        <view class="btn btn_pay" @tap="afterSaleDetail" data-id="{{item.id}}" wx:if="{{item.case_fal}}">查看售后</view>
      </view>
    </view>
  </view>
  </view>
</repeat>
</view>
</template>
<script>
import wepy from 'wepy'
import tip from '@/utils/tip'
import ShopItemList from '@/components/shop_item_list'
import api from '@/api/api'
import {
  SYSTEM_INFO,
  USER_SPECICAL_INFO
} from '@/utils/constant';
export default class orderItem extends wepy.component {

  props = {
    orderList: {
      default: [],
      flag:"",
      orderNo:"",
      list:[]
    },
    otag:{
      default:''
    }
  }

  async editOrderInfo(orderNo,flag) {
    console.log("调用方法");
    let that = this;
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    const json = await api.editOrderInfo({
      query: {
        orderNo: orderNo,
        flag:flag
      }
    });
    if (json.data.code == 0) {

      this.$emit('refreshOrderList', that.flag);
    } else {
      tip.error(json.data.errerTips)
    }
    that.$apply();
  }
  components = {
    shopItemList: ShopItemList
  }

  events = {

  }

  methods = {
    async cancelOrder(e) {
      let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
      let openid = userSpecialInfo.openid;
      let mid=userSpecialInfo.mid;
      let id=e.currentTarget.dataset.id||'';
      const json = await api.cancelOrder({
        query: {
          open_id: openid,
          m_id:mid,
          id:id
        }
      });
        for (let i = 0; i < this.orderList.length; i++){
          if(this.orderList[i].id==id) {
            if(this.otag == ''){
             this.orderList[i].otag_name='订单已取消';
            }
            else{
               this.orderList.splice(i,1);
           }
            break;
          }

        }

      this.$apply();
    },
      async completion(e) {
      this.flag=3;
      this.orderNo = e.currentTarget.dataset.id;
      await tip.confirm('是否确认收货');
      this.editOrderInfo(this.orderNo,this.flag);
    },
    async afterSale(e){
      let id = e.currentTarget.dataset.id||'';
      wepy.navigateTo({
        url: "/pages/applyAfterSale?orderid="+id
      })
    },
    async payMoney(e) {
      let id = e.currentTarget.dataset.id;
      let tradeNo = e.currentTarget.dataset.tradeno;
      let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
      let openId = userSpecialInfo.openid;
      let mid = userSpecialInfo.mid;

      const json = await api.orderBuy({
        query:{
          open_id: openId,
          m_id:mid,
            id:id
        }
      });
      if (pay.data.code==0) {
        //以下是微信支付
        wx.requestPayment({
          appId: pay.data.appId,
          timeStamp: pay.data.timeStamp,
          nonceStr: pay.data.nonceStr,
          package: pay.data.package,
          signType: 'MD5',
          paySign: pay.data.paySign,
          success: function (res) {
            setTimeout(() => {
              //支付成功 关闭loadding 跳转到支付成功页面
              tip.loaded();
              wepy.navigateTo({
                url: "/pages/pay_success?orderNo="+tradeNo
              })
            }, 2000)
          },
          fail: function (res) {
            tip.alert('支付失败');
          }
        })
      } else {
        tip.alert('支付失败');
      }
    }
  }

  onLoad() {
  }
}

</script>
<style lang="less">
.order_item {
  padding: 10rpx 0rpx;
  background: #f7f7f7;
  margin-bottom: 30rpx;
  .title {
    font-size: 26rpx;
    color: #333;
  }
  .order_doc {
    font-size: 26rpx;
    color: #808080;
  }
  .mt10 {
    margin-top: 10rpx;
  }
  .order_state {
    color: #ff4856;
    font-size: 32rpx;
  }
  .order_list_top {
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
  }
  .order_list_footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 20rpx;
    .num {
      color: #ff4856;
    }
  }
  .order_list_top {
    padding-bottom: 26rpx;
    border-bottom: 1px solid #efefef
  }
  .list {
    background: #fff;
    padding: 30rpx;
    margin-top: 15rpx;
  }
  .btn_group {
    display: flex;
    align-items: center;
    .btn {
      font-size: 30rpx;
      padding: 22rpx 35rpx;
      text-align: center;
      margin: 0 auto;
      width: 100%;
      -moz-border-radius: 15rpx;
      /* Firefox */
      -webkit-border-radius: 15rpx;
      /* Safari 和 Chrome */
      border-radius: 15rpx;
      /* Opera 10.5+, 以及使用了IE-CSS3的IE浏览器 */
    }
    .btn_del {
      color: #333;
      border: 1px solid #ccc;
    }
    .btn_pay {
      background: #ff4856;
      color: #fff;
      margin-left: 20rpx;
    }
  }
}

</style>
