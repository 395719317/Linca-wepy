<style lang="less">
.block {
  background: #fff;
}

.list_item {
  display: flex;
  align-items: center;
  border-top: 1px solid #efefef;
  padding: 35rpx 20rpx;
  .title {
    margin-right: 20rpx;
  }
  .input {
    flex: 1;
    input {
      color: #333;
    }
  }
}

.btn_box {
  margin-top: 64rpx;
  padding: 0 24rpx;
}

</style>
<template>
  <form bindsubmit="formSubmit">
    <view class="block">
      <view class="list_item">
        <view class="title">收货人姓名:</view>
        <view class="input">
          <input type="text" name="receiverName" value="{{editInfo.link_name}}" />
        </view>
      </view>
      <view class="list_item">
        <view class="title">联系电话:</view>
        <view class="input">
          <input type="text" name="mobile" value="{{editInfo.link_tel}}"/>
        </view>
      </view>
      <view class="list_item">
        <view class="title">身份证号:</view>
        <view class="input">
          <input type="text" name="link_code" value="{{editInfo.link_code}}"/>
        </view>
      </view>
      <view class="list_item">
        <view class="title">所在地区:</view>
        <view class="input">
          <view @tap="openAddressPicker">{{province ? province.name : '省'}} - {{city ? city.name : '市' }} - {{area ? area.name : '区' }}</view>
          <areaPicker @areaArray.user="areaPickerArray"></areaPicker>
        </view>
      </view>
      <view class="list_item">
        <view class="title">详细地址:</view>
        <view class="input">
          <input type="text" name="addressDetail" value="{{editInfo.link_adds}}" />
        </view>
      </view>
      <view class="list_item">
        <view class="title">电子邮箱:</view>
        <view class="input">
          <input type="text" name="email" value="{{editInfo.link_email}}" />
        </view>
      </view>
      <view class="list_item">
        <view class="title">邮政编号:</view>
        <view class="input">
          <input type="text" name="postCode" value="{{editInfo.zip_code}}" />
        </view>
      </view>
      <view class="list_item">
        <view class="title">设置默认地址:</view>
        <view class="input tr" @tap="changeCheckBoxState">
          <icon type="success" size="20" color="{{isDefult? 'red':'#999'}}" />
        </view>
      </view>
    </view>
    <view class="btn_box">
      <button class="button type_red" formType="submit">修改</button>
    </view>
  </form>
</template>
<script>
import wepy from 'wepy'
import tip from '@/utils/tip'
import api from "@/api/api"
import {
  USER_SPECICAL_INFO
} from '@/utils/constant';
import AreaPicker from "./common/wepy-area-picker"
export default class AddressEdit extends wepy.component {
  props = {

    // 父向子单向动态传值
    addrid: {
      type: String,
      default: 'null'
    },
    addrcur:{
      type: String,
      default: 'null'
    }
  };

  data = {
    isDefult: false,
    isCheck: false,
    citys_name:'',
    editInfo: {
      default: {},
      type: Object
    },
    id: '',
    province: '',
    city: '',
    area: '',
    provinceCode: '',
    cityCode: '',
    areaCode: ''
  }

  components = {
    areaPicker: AreaPicker
  }
  //在form中的数据，作为接口data
  async editAddress(address) {
    console.log("保存");
    let that = this;
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    let isDefult = 0;
    if (this.isDefult) {
      isDefult = 1;
    }
    let openId = userSpecialInfo.openid;
    let mid = userSpecialInfo.mid;
    if(this.citys_name==''||this.citys_name==undefined){
        this.citys_name=this.province.name+" "+this.city.name+" "+this.area.name
    }
    var curid='';
    console.log('2id---------',this.id);
    if(this.id==''||this.id==null||this.id==undefined){
      curid=this.addrid;
    }else{
      curid=this.id;
    }
    const json = await api.addAddress({
      query: {
        open_id: openId,
        m_id:mid,
        link_name:address.receiverName,
        link_code:address.link_code,
        id:curid,
        citys_name:this.citys_name,
        link_adds:address.addressDetail,
        link_tel:address.mobile,
        link_email:address.email,
        zip_code:address.postCode,
        is_def: isDefult,
      }
    });
    if (json.data.code == 0) {
      //0 列表 1新增 2编辑 (显示列表)
      this.$emit('currentPage', 0);
      this.$emit('refreshAddList', 'hehe');

    } else {
      tip.error(json.data.msg)
    }
    that.showLoading = false;
  }
  methods = {
    changeCheckBoxState() {
      this.isCheck = !this.isCheck;
      this.isDefult = !this.isDefult;
      this.$apply();
    },
    formSubmit(e) {

      let receiverName = e.detail.value.receiverName;
      let mobile = e.detail.value.mobile;
      let addressDetail = e.detail.value.addressDetail;
      let email=e.detail.value.addressDetail;
      let linkCode=e.detail.value.linkCode;
      let postCode=e.detail.value.postCode;

      if (receiverName == "") {
        tip.alert("输入收件人姓名");
        return false;
      }
      if (mobile == "") {
        tip.alert("输入联系电话");
        return false;

      }
      if (addressDetail == "") {
        tip.alert("输入详细地址");
        return false;
      }
      this.editAddress(e.detail.value);
      console.log('form发生了submit事件，携带数据为：', e.detail.value)
    },
    //编辑地址数据填充
    refresh(val) {
      if (val == undefined) return;
      this.editInfo = val;
      this.id = this.editInfo.addres_id;
      console.log('1--id',this.id);
      if(this.editInfo.is_def==1){
        this.isDefult=true
      }
      this.province = {name: this.editInfo.states };
      this.city = { name:this.editInfo.citys };
      this.area = { name: this.editInfo.comm_zones };
      this.$apply();
    },
    //点击事件：打开选择地址弹窗
    openAddressPicker() {
      this.$invoke('areaPicker', 'openAddressPicker');
    },
    areaPickerArray(province, city, area) {
      this.province = province;
      console.log('province',province);
      this.city = city;
      this.area = area;
      this.provinceCode = province.code;
      this.cityCode = city.code;
      this.areaCode = area.code;
      this.citys_name=this.province.name+" "+this.city.name+" "+this.area.name
      this.$apply();
    }
  }

  onShow() {
    this.province = { code: '120000', name: '天津市' };
    this.city = { code: '120100', name: '天津市' };
    this.area = { code: '120101', name: '和平区' };
    this.$invoke('areaPicker', 'setAddressPickerValue', this.province, this.city, this.area);
  }
}

</script>
